<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <title>WC3 Geometry</title>
    <base href="wc3-geometry">
    <link rel="stylesheet" href="main.css">
    <script type="module" src="js/canvas-axis.mjs" defer></script>
    <script type="module" src="js/canvas-angle.mjs" defer></script>
    <script type="module" src="js/canvas-distance-line.mjs" defer></script>
    <script type="module" src="js/canvas-distance.mjs" defer></script>
</head>
<body>

<h1 class="header">Геометрия в игре</h1>
<div class="container">

    <!-- Предисловие -->
    <h2 class="header">Предисловие</h2>
    <p>
        Цель этой статьи познакомить новичков с геометрией в игре. Так что не ждите здесь
        <a href="https://w.wiki/7XDe" target="_blank">пересечений паралельных прямых</a> и прочих интересных вещей.
        Здесь будут только базовые знания немного посыпанные формулами и объяснениями на уровне первого класа особо одарённых учеников. Так что заварите себе чаю, вощьмите в зубы карандаш для умного вида и погнали.
    </p>

    <!-- Координаты -->
    <h2 id="axis" class="header">Координаты</h2>
    <p>
        Когда речь заходит о позиционировании, первым делом необходимо определить точку отсчёта. В нашем случае это
        <a href="https://w.wiki/7XDf">оси координат</a>. Даже если вы плохо учились в школе, наша наглядная демонстрация поможет вам в понимании их работы.
    </p>

    <div class="canvas canvas-axis"></div>

    <p>
        Учтите, что точка
        <span class="point"><b>0</b><b>0</b></span> не всегда находится в середине карты. При определённой криворукости, она вообще может быть за её пределами.
        Это следствие того, что при изменениии границ карты координаты не сдвигаются относительно рельефа.
    </p>

    <!-- Координаты -->
    <h2 id="distance" class="header">Расстояние</h2>
    <p>
        Когда речь заходит о
        <a href="https://w.wiki/7Z6h" target="_blank">расстоянии</a>, то первым на ум приходит расстояние между двумя точками.
        Но мы не будем сходу окунаться в двумерное пространство, а ограничимся одним измерением, тобишь точками на координатной прямой.
    </p>
    <p>
        Для того, чтобы вычислить расстояние между двумя точками на координатной прямой, необходимо просто взять
        <a href="https://w.wiki/7Z79" target="_blank">абсолютную величину</a> разности двух ккординат. Или по простому, отнять от одной координаты другую и выбросить минус, если он есть. Притом абсолютно не важно, какую координату из какой вычитать. Убедиться в этом вы можете на интерактивной демонстрации.
    </p>

    <div class="canvas canvas-distance-line"></div>

    <p>Как вы могли заметить, формула прекрасно работает вне зависимости от направления оси. Теперь можно воспользоваться
        <a href="https://w.wiki/7axe" target="_blank">Теоремой Пифагора</a> и найти расстояние между точками на плоскости.
    </p>

    <p>
        Если вы не понимаете, при чём здесь треугольники, то эта интерактивная демонстрация вам всё пояснит.
    </p>
    <div class="canvas canvas-distance"></div>

    <pre>function DistanceBetweenPoints takes location locA, location locB returns real
    local real dx = GetLocationX(locB) - GetLocationX(locA)
    local real dy = GetLocationY(locB) - GetLocationY(locA)
    return SquareRoot(dx * dx + dy * dy)
endfunction</pre>

    <pre>native MathPointProjectionX takes real x, real angle, real distance returns real
native MathPointProjectionY takes real y, real angle, real distance returns real
native MathAngleBetweenPoints takes real fromX, real fromY, real toX, real toY returns real
native MathDistanceBetweenPoints takes real fromX, real fromY, real toX, real toY returns real
native MathAngleBetweenLocations takes location fromLoc, location toLoc returns real
native MathDistanceBetweenLocations takes location fromLoc, location toLoc returns real
</pre>

    <!-- Углы -->
    <h2 id="angles" class="header">Углы</h2>
    <p>Когда речь заходит про измерение <a href="https://w.wiki/7YCN">углов</a>, те, кто учился в школе сразу вспоминают
        <a href="https://w.wiki/7YBq" target="_blank">транспортир</a> и разметку
        <a href="https://w.wiki/7YBv" target="_blank">от нуля до 360</a>. Это всё прекрасно работает в своей области применения, но когда дело доходит до программирования то все культурные люди переходят на
        <a href="https://w.wiki/7YCS" target="_blank">радианы</a>. Они имеют много интересных и полезных геометрических свойств из-за чего в большинстве
        <a href="https://w.wiki/68GR" target="_blank">языков программирования</a> геометрические функции принимают на вход именно
        <a href="https://w.wiki/7YCS" target="_blank">радианы</a>.
    </p>

    <p>Для простоты понимания, по сложившейся традиции, наша команда подготовила интерактивную демонстрацию.</p>

    <div class="canvas canvas-angle"></div>
    <div class="canvas canvas-test"></div>

</div>

</body>
</html>
